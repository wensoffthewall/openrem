# Generated by Django 2.2 on 2019-11-11 14:32

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AccumXRayDose',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='AdminTaskQuestions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ask_revert_to_074_question', models.BooleanField(default=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ContextID',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code_value', models.TextField()),
                ('code_meaning', models.TextField(blank=True, null=True)),
                ('cid_table', models.CharField(blank=True, max_length=16)),
            ],
            options={
                'ordering': ['code_value'],
            },
        ),
        migrations.CreateModel(
            name='CtAccumulatedDoseData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_number_of_irradiation_events', models.DecimalField(blank=True, decimal_places=0, max_digits=16, null=True)),
                ('ct_dose_length_product_total', models.DecimalField(blank=True, decimal_places=8, max_digits=16, null=True)),
                ('ct_effective_dose_total', models.DecimalField(blank=True, decimal_places=8, max_digits=16, null=True)),
                ('reference_authority_text', models.TextField(blank=True, null=True)),
                ('patient_model', models.TextField(blank=True, null=True)),
                ('effective_dose_phantom_type', models.TextField(blank=True, null=True)),
                ('dosimeter_type', models.TextField(blank=True, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='CtDoseCheckDetails',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dlp_alert_value_configured', models.NullBooleanField()),
                ('ctdivol_alert_value_configured', models.NullBooleanField()),
                ('dlp_alert_value', models.DecimalField(blank=True, decimal_places=8, max_digits=16, null=True)),
                ('ctdivol_alert_value', models.DecimalField(blank=True, decimal_places=8, max_digits=16, null=True)),
                ('accumulated_dlp_forward_estimate', models.DecimalField(blank=True, decimal_places=8, max_digits=16, null=True)),
                ('accumulated_ctdivol_forward_estimate', models.DecimalField(blank=True, decimal_places=8, max_digits=16, null=True)),
                ('alert_reason_for_proceeding', models.TextField(blank=True, null=True)),
                ('dlp_notification_value_configured', models.NullBooleanField()),
                ('ctdivol_notification_value_configured', models.NullBooleanField()),
                ('dlp_notification_value', models.DecimalField(blank=True, decimal_places=4, max_digits=8, null=True)),
                ('ctdivol_notification_value', models.DecimalField(blank=True, decimal_places=4, max_digits=8, null=True)),
                ('dlp_forward_estimate', models.DecimalField(blank=True, decimal_places=4, max_digits=8, null=True)),
                ('ctdivol_forward_estimate', models.DecimalField(blank=True, decimal_places=4, max_digits=8, null=True)),
                ('notification_reason_for_proceeding', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='CtIrradiationEventData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('acquisition_protocol', models.TextField(blank=True, null=True)),
                ('irradiation_event_uid', models.TextField(blank=True, null=True)),
                ('irradiation_event_label', models.TextField(blank=True, null=True)),
                ('exposure_time', models.DecimalField(blank=True, decimal_places=8, max_digits=16, null=True)),
                ('nominal_single_collimation_width', models.DecimalField(blank=True, decimal_places=8, max_digits=16, null=True)),
                ('nominal_total_collimation_width', models.DecimalField(blank=True, decimal_places=8, max_digits=16, null=True)),
                ('pitch_factor', models.DecimalField(blank=True, decimal_places=8, max_digits=16, null=True)),
                ('number_of_xray_sources', models.DecimalField(blank=True, decimal_places=0, max_digits=8, null=True)),
                ('mean_ctdivol', models.DecimalField(blank=True, decimal_places=8, max_digits=16, null=True)),
                ('ctdifreeair_calculation_factor', models.DecimalField(blank=True, decimal_places=8, max_digits=16, null=True)),
                ('mean_ctdifreeair', models.DecimalField(blank=True, decimal_places=8, max_digits=16, null=True)),
                ('dlp', models.DecimalField(blank=True, decimal_places=8, max_digits=16, null=True)),
                ('effective_dose', models.DecimalField(blank=True, decimal_places=8, max_digits=16, null=True)),
                ('effective_dose_conversion_factor', models.DecimalField(blank=True, decimal_places=8, max_digits=16, null=True)),
                ('xray_modulation_type', models.TextField(blank=True, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_time_started', models.DateTimeField(blank=True, null=True)),
                ('series_description', models.TextField(blank=True, null=True)),
                ('ct_acquisition_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tid10013_type', to='remapp.ContextID')),
            ],
        ),
        migrations.CreateModel(
            name='CtRadiationDose',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_of_xray_irradiation', models.DateTimeField(blank=True, null=True)),
                ('end_of_xray_irradiation', models.DateTimeField(blank=True, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='DicomDeleteSettings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('del_no_match', models.BooleanField(default=False, verbose_name="delete objects that don't match any import functions?")),
                ('del_rdsr', models.BooleanField(default=False, verbose_name='delete radiation dose structured reports after processing?')),
                ('del_mg_im', models.BooleanField(default=False, verbose_name='delete mammography images after processing?')),
                ('del_dx_im', models.BooleanField(default=False, verbose_name='delete radiography images after processing?')),
                ('del_ct_phil', models.BooleanField(default=False, verbose_name='delete Philips CT dose info images after processing?')),
            ],
            options={
                'verbose_name': 'Delete DICOM objects settings',
            },
        ),
        migrations.CreateModel(
            name='DicomRemoteQR',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, unique=True, verbose_name='Name of QR node - fewer than 64 characters, spaces allowed')),
                ('aetitle', models.CharField(blank=True, max_length=16, null=True, verbose_name='AE Title of the remote node - 16 or fewer letters and numbers, no spaces')),
                ('port', models.IntegerField(blank=True, null=True, verbose_name='Remote port')),
                ('ip', models.GenericIPAddressField(blank=True, null=True, verbose_name='Remote IP address')),
                ('hostname', models.CharField(blank=True, max_length=32, null=True, verbose_name='Or remote hostname')),
                ('callingaet', models.CharField(blank=True, max_length=16, null=True, verbose_name='AE Title of this OpenREM server - 16 or fewer letters and numbers, no spaces')),
                ('use_modality_tag', models.BooleanField(default=False, verbose_name='Use modality tag in study query')),
                ('enabled', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='DicomStoreSCP',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, unique=True, verbose_name='Name of local store node - fewer than 64 characters, spaces allowed')),
                ('aetitle', models.CharField(blank=True, max_length=16, null=True, verbose_name='AE Title of this node - 16 or fewer letters and numbers, no spaces')),
                ('port', models.IntegerField(blank=True, null=True, verbose_name='Port: 104 is standard for DICOM but over 1024 requires fewer admin rights')),
                ('task_id', models.CharField(blank=True, max_length=64, null=True)),
                ('status', models.CharField(blank=True, max_length=64, null=True)),
                ('run', models.BooleanField(default=False)),
                ('keep_alive', models.BooleanField(default=False, verbose_name='Should this server be kept auto-started and kept alive (using celery beat)')),
                ('controlled', models.BooleanField(default=False, verbose_name='Is this server controlled by OpenREM')),
            ],
        ),
        migrations.CreateModel(
            name='GeneralStudyModuleAttr',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('study_instance_uid', models.TextField(blank=True, null=True)),
                ('study_date', models.DateField(blank=True, null=True)),
                ('study_time', models.TimeField(blank=True, null=True)),
                ('study_workload_chart_time', models.DateTimeField(blank=True, null=True)),
                ('referring_physician_name', models.TextField(blank=True, null=True)),
                ('referring_physician_identification', models.TextField(blank=True, null=True)),
                ('study_id', models.CharField(blank=True, max_length=16, null=True)),
                ('accession_number', models.TextField(blank=True, null=True)),
                ('accession_hashed', models.BooleanField(default=False)),
                ('study_description', models.TextField(blank=True, null=True)),
                ('physician_of_record', models.TextField(blank=True, null=True)),
                ('name_of_physician_reading_study', models.TextField(blank=True, null=True)),
                ('performing_physician_name', models.TextField(blank=True, null=True)),
                ('operator_name', models.TextField(blank=True, null=True)),
                ('modality_type', models.CharField(blank=True, max_length=16, null=True)),
                ('procedure_code_value', models.TextField(blank=True, null=True)),
                ('procedure_code_meaning', models.TextField(blank=True, null=True)),
                ('requested_procedure_code_value', models.TextField(blank=True, null=True)),
                ('requested_procedure_code_meaning', models.TextField(blank=True, null=True)),
                ('series_instance_uid', models.TextField(blank=True, null=True)),
                ('series_time', models.TimeField(blank=True, null=True)),
                ('content_time', models.TimeField(blank=True, null=True)),
                ('number_of_events', models.IntegerField(blank=True, null=True)),
                ('number_of_events_a', models.IntegerField(blank=True, null=True)),
                ('number_of_events_b', models.IntegerField(blank=True, null=True)),
                ('number_of_axial', models.IntegerField(blank=True, null=True)),
                ('number_of_spiral', models.IntegerField(blank=True, null=True)),
                ('number_of_stationary', models.IntegerField(blank=True, null=True)),
                ('number_of_const_angle', models.IntegerField(blank=True, null=True)),
                ('total_dlp', models.DecimalField(blank=True, decimal_places=8, max_digits=16, null=True)),
                ('total_dap_a', models.DecimalField(blank=True, decimal_places=12, max_digits=16, null=True)),
                ('total_dap_b', models.DecimalField(blank=True, decimal_places=12, max_digits=16, null=True)),
                ('total_dap', models.DecimalField(decimal_places=12, max_digits=16, null=True)),
                ('total_rp_dose_a', models.DecimalField(blank=True, decimal_places=12, max_digits=16, null=True)),
                ('total_rp_dose_b', models.DecimalField(blank=True, decimal_places=12, max_digits=16, null=True)),
                ('total_dap_delta_weeks', models.DecimalField(blank=True, decimal_places=12, max_digits=16, null=True)),
                ('total_rp_dose_delta_weeks', models.DecimalField(blank=True, decimal_places=12, max_digits=16, null=True)),
                ('total_agd_left', models.DecimalField(blank=True, decimal_places=8, max_digits=16, null=True)),
                ('total_agd_right', models.DecimalField(blank=True, decimal_places=8, max_digits=16, null=True)),
                ('total_agd_both', models.DecimalField(blank=True, decimal_places=8, max_digits=16, null=True)),
                ('number_of_planes', models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='HighDoseMetricAlertSettings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alert_total_dap_rf', models.IntegerField(blank=True, default=20000, null=True, verbose_name='Alert level for total DAP from fluoroscopy examination (cGy.cm<sup>2</sup>)')),
                ('alert_total_rp_dose_rf', models.FloatField(blank=True, default=2.0, null=True, verbose_name='Alert level for total dose at reference point from fluoroscopy examination (Gy)')),
                ('accum_dose_delta_weeks', models.IntegerField(blank=True, default=12, null=True, verbose_name='Number of previous weeks over which to sum DAP and RP dose for each patient')),
                ('changed_accum_dose_delta_weeks', models.BooleanField(default=True)),
                ('show_accum_dose_over_delta_weeks', models.BooleanField(default=True, verbose_name='Enable display of summed DAP and RP dose in e-mail alerts and on summary and detail pages?')),
                ('calc_accum_dose_over_delta_weeks_on_import', models.BooleanField(default=True, verbose_name='Calculate summed DAP and RP dose for incoming fluoroscopy studies?')),
                ('send_high_dose_metric_alert_emails', models.BooleanField(default=False, verbose_name='Send notification e-mails when alert levels are exceeded?')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='HomePageAdminSettings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enable_workload_stats', models.BooleanField(default=False, verbose_name='Enable calculation and display of workload stats on home page?')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='IrradEventXRayData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('irradiation_event_uid', models.TextField(blank=True, null=True)),
                ('irradiation_event_label', models.TextField(blank=True, null=True)),
                ('date_time_started', models.DateTimeField(blank=True, null=True)),
                ('acquisition_protocol', models.TextField(blank=True, null=True)),
                ('projection_eponymous_name', models.CharField(blank=True, max_length=16, null=True)),
                ('patient_table_relationship', models.CharField(blank=True, max_length=16, null=True)),
                ('patient_orientation', models.CharField(blank=True, max_length=16, null=True)),
                ('patient_orientation_modifier', models.CharField(blank=True, max_length=16, null=True)),
                ('dose_area_product', models.DecimalField(blank=True, decimal_places=10, max_digits=16, null=True)),
                ('half_value_layer', models.DecimalField(blank=True, decimal_places=8, max_digits=16, null=True)),
                ('patient_equivalent_thickness', models.DecimalField(blank=True, decimal_places=8, max_digits=16, null=True)),
                ('entrance_exposure_at_rp', models.DecimalField(blank=True, decimal_places=8, max_digits=16, null=True)),
                ('reference_point_definition_text', models.TextField(blank=True, null=True)),
                ('breast_composition', models.CharField(blank=True, max_length=16, null=True)),
                ('percent_fibroglandular_tissue', models.DecimalField(blank=True, decimal_places=8, max_digits=16, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('acquisition_plane', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tid10003_plane', to='remapp.ContextID')),
                ('anatomical_structure', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tid10003_anatomy', to='remapp.ContextID')),
                ('breast_composition_cid', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tid10003_breastcomposition', to='remapp.ContextID')),
                ('image_view', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tid10003_view', to='remapp.ContextID')),
                ('irradiation_event_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tid10003_eventtype', to='remapp.ContextID')),
                ('label_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tid10003_labeltype', to='remapp.ContextID')),
                ('laterality', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tid10003_laterality', to='remapp.ContextID')),
                ('patient_orientation_cid', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tid10003_ptorientation', to='remapp.ContextID')),
                ('patient_orientation_modifier_cid', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tid10003_ptorientationmod', to='remapp.ContextID')),
                ('patient_table_relationship_cid', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tid10003_pttablerel', to='remapp.ContextID')),
                ('projection_eponymous_name_cid', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tid10003_pojectioneponymous', to='remapp.ContextID')),
            ],
        ),
        migrations.CreateModel(
            name='IrradEventXRaySourceData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dose_rp', models.DecimalField(blank=True, decimal_places=12, max_digits=16, null=True)),
                ('reference_point_definition', models.TextField(blank=True, null=True)),
                ('average_glandular_dose', models.DecimalField(blank=True, decimal_places=8, max_digits=16, null=True)),
                ('pulse_rate', models.DecimalField(blank=True, decimal_places=8, max_digits=16, null=True)),
                ('number_of_pulses', models.DecimalField(blank=True, decimal_places=2, max_digits=16, null=True)),
                ('derivation', models.CharField(blank=True, max_length=16, null=True)),
                ('irradiation_duration', models.DecimalField(blank=True, decimal_places=8, max_digits=16, null=True)),
                ('average_xray_tube_current', models.DecimalField(blank=True, decimal_places=8, max_digits=16, null=True)),
                ('exposure_time', models.DecimalField(blank=True, decimal_places=2, max_digits=16, null=True)),
                ('focal_spot_size', models.DecimalField(blank=True, decimal_places=8, max_digits=16, null=True)),
                ('collimated_field_area', models.DecimalField(blank=True, decimal_places=8, max_digits=16, null=True)),
                ('collimated_field_height', models.DecimalField(blank=True, decimal_places=8, max_digits=16, null=True)),
                ('collimated_field_width', models.DecimalField(blank=True, decimal_places=8, max_digits=16, null=True)),
                ('ii_field_size', models.IntegerField(blank=True, null=True)),
                ('exposure_control_mode', models.CharField(blank=True, max_length=16, null=True)),
                ('grid_absorbing_material', models.TextField(blank=True, null=True)),
                ('grid_spacing_material', models.TextField(blank=True, null=True)),
                ('grid_thickness', models.DecimalField(blank=True, decimal_places=6, max_digits=16, null=True)),
                ('grid_pitch', models.DecimalField(blank=True, decimal_places=6, max_digits=16, null=True)),
                ('grid_aspect_ratio', models.TextField(blank=True, null=True)),
                ('grid_period', models.DecimalField(blank=True, decimal_places=6, max_digits=16, null=True)),
                ('grid_focal_distance', models.DecimalField(blank=True, decimal_places=6, max_digits=16, null=True)),
                ('anode_target_material', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tid10003b_anodetarget', to='remapp.ContextID')),
                ('derivation_cid', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tid10003b_derivation', to='remapp.ContextID')),
                ('fluoro_mode', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tid10003b_fluoromode', to='remapp.ContextID')),
                ('irradiation_event_xray_data', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='remapp.IrradEventXRayData')),
                ('reference_point_definition_code', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tid10003b_rpdefinition', to='remapp.ContextID')),
            ],
        ),
        migrations.CreateModel(
            name='MergeOnDeviceObserverUIDSettings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('match_on_device_observer_uid', models.BooleanField(default=False, verbose_name='Set Display Name and Modality type if Device Observer UID is matching.')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='NotPatientIndicatorsID',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('not_patient_id', models.CharField(max_length=64)),
            ],
            options={
                'verbose_name': 'Not-patient indicator ID',
                'verbose_name_plural': 'Not-patient indicator IDs',
            },
        ),
        migrations.CreateModel(
            name='NotPatientIndicatorsName',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('not_patient_name', models.CharField(max_length=64)),
            ],
            options={
                'verbose_name': 'Not-patient indicator name',
                'verbose_name_plural': 'Not-patient indicator names',
            },
        ),
        migrations.CreateModel(
            name='PatientIDSettings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_stored', models.BooleanField(default=False)),
                ('name_hashed', models.BooleanField(default=True)),
                ('id_stored', models.BooleanField(default=False)),
                ('id_hashed', models.BooleanField(default=True)),
                ('accession_hashed', models.BooleanField(default=False)),
                ('dob_stored', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Patient ID Settings',
            },
        ),
        migrations.CreateModel(
            name='SizeSpecificDoseEstimation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('measured_lateral_dimension', models.DecimalField(blank=True, decimal_places=8, max_digits=16, null=True)),
                ('measured_ap_dimension', models.DecimalField(blank=True, decimal_places=8, max_digits=16, null=True)),
                ('derived_effective_diameter', models.DecimalField(blank=True, decimal_places=8, max_digits=16, null=True)),
                ('water_equivalent_diameter', models.DecimalField(blank=True, decimal_places=8, max_digits=16, null=True)),
                ('wed_estimate_location_z', models.DecimalField(blank=True, decimal_places=8, max_digits=16, null=True)),
                ('ct_irradiation_event_data', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='remapp.CtIrradiationEventData')),
                ('measurement_method', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ssde_method', to='remapp.ContextID')),
                ('water_equivalent_diameter_method', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ssde_wed_method', to='remapp.ContextID')),
            ],
        ),
        migrations.CreateModel(
            name='SizeUpload',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sizefile', models.FileField(upload_to='sizeupload')),
                ('height_field', models.TextField(blank=True, null=True)),
                ('weight_field', models.TextField(blank=True, null=True)),
                ('id_field', models.TextField(blank=True, null=True)),
                ('id_type', models.TextField(blank=True, null=True)),
                ('task_id', models.TextField(blank=True, null=True)),
                ('status', models.TextField(blank=True, null=True)),
                ('progress', models.TextField(blank=True, null=True)),
                ('num_records', models.IntegerField(blank=True, null=True)),
                ('logfile', models.FileField(null=True, upload_to='sizelogs/%Y/%m/%d')),
                ('import_date', models.DateTimeField(blank=True, null=True)),
                ('processtime', models.FloatField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='SkinDoseMapCalcSettings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enable_skin_dose_maps', models.BooleanField(default=False, verbose_name='Enable skin dose maps?')),
                ('calc_on_import', models.BooleanField(default=True, verbose_name='Calculate skin dose map on import?')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SummaryFields',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('modality_type', models.CharField(max_length=2, null=True)),
                ('complete', models.BooleanField(default=False)),
                ('status_message', models.TextField(blank=True, null=True)),
                ('total_studies', models.IntegerField(default=0)),
                ('current_study', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='UpgradeStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('from_0_9_1_summary_fields', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='XrayTubeCurrent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('xray_tube_current', models.DecimalField(blank=True, decimal_places=8, max_digits=16, null=True)),
                ('irradiation_event_xray_source_data', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='remapp.IrradEventXRaySourceData')),
            ],
        ),
        migrations.CreateModel(
            name='XrayGrid',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('irradiation_event_xray_source_data', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='remapp.IrradEventXRaySourceData')),
                ('xray_grid', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='remapp.ContextID')),
            ],
        ),
        migrations.CreateModel(
            name='XrayFilters',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('xray_filter_thickness_minimum', models.DecimalField(blank=True, decimal_places=8, max_digits=16, null=True)),
                ('xray_filter_thickness_maximum', models.DecimalField(blank=True, decimal_places=8, max_digits=16, null=True)),
                ('irradiation_event_xray_source_data', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='remapp.IrradEventXRaySourceData')),
                ('xray_filter_material', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='xrayfilters_material', to='remapp.ContextID')),
                ('xray_filter_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='xrayfilters_type', to='remapp.ContextID')),
            ],
        ),
        migrations.CreateModel(
            name='WEDSeriesOrInstances',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('wed_series_or_instance', models.TextField(blank=True, null=True)),
                ('size_specific_dose_estimation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='remapp.SizeSpecificDoseEstimation')),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('itemsPerPage', models.IntegerField(choices=[(10, '10'), (25, '25'), (50, '50'), (100, '100'), (200, '200'), (400, '400')], default=25, null=True)),
                ('median_available', models.BooleanField(default=False, editable=False)),
                ('plotAverageChoice', models.CharField(choices=[('mean', 'mean'), ('median', 'median'), ('both', 'both')], default='mean', max_length=6)),
                ('plotInitialSortingDirection', models.IntegerField(choices=[(1, 'Ascending'), (-1, 'Descending')], default=-1, null=True)),
                ('plotCharts', models.BooleanField(default=False)),
                ('plotDXAcquisitionMeanDAP', models.BooleanField(default=True)),
                ('plotDXAcquisitionFreq', models.BooleanField(default=False)),
                ('plotDXStudyMeanDAP', models.BooleanField(default=True)),
                ('plotDXStudyFreq', models.BooleanField(default=True)),
                ('plotDXRequestMeanDAP', models.BooleanField(default=True)),
                ('plotDXRequestFreq', models.BooleanField(default=True)),
                ('plotDXAcquisitionMeankVp', models.BooleanField(default=False)),
                ('plotDXAcquisitionMeanmAs', models.BooleanField(default=False)),
                ('plotDXStudyPerDayAndHour', models.BooleanField(default=False)),
                ('plotDXAcquisitionMeankVpOverTime', models.BooleanField(default=False)),
                ('plotDXAcquisitionMeanmAsOverTime', models.BooleanField(default=False)),
                ('plotDXAcquisitionMeanDAPOverTime', models.BooleanField(default=False)),
                ('plotDXAcquisitionMeanDAPOverTimePeriod', models.CharField(choices=[('days', 'Days'), ('weeks', 'Weeks'), ('months', 'Months'), ('years', 'Years')], default='months', max_length=6)),
                ('plotDXInitialSortingChoice', models.CharField(choices=[('dap', 'DAP'), ('freq', 'Frequency'), ('name', 'Name')], default='freq', max_length=4)),
                ('plotCTAcquisitionMeanDLP', models.BooleanField(default=True)),
                ('plotCTAcquisitionMeanCTDI', models.BooleanField(default=True)),
                ('plotCTAcquisitionFreq', models.BooleanField(default=False)),
                ('plotCTStudyMeanDLP', models.BooleanField(default=True)),
                ('plotCTStudyMeanCTDI', models.BooleanField(default=True)),
                ('plotCTStudyFreq', models.BooleanField(default=False)),
                ('plotCTStudyNumEvents', models.BooleanField(default=False)),
                ('plotCTRequestMeanDLP', models.BooleanField(default=False)),
                ('plotCTRequestFreq', models.BooleanField(default=False)),
                ('plotCTRequestNumEvents', models.BooleanField(default=False)),
                ('plotCTStudyPerDayAndHour', models.BooleanField(default=False)),
                ('plotCTStudyMeanDLPOverTime', models.BooleanField(default=False)),
                ('plotCTStudyMeanDLPOverTimePeriod', models.CharField(choices=[('days', 'Days'), ('weeks', 'Weeks'), ('months', 'Months'), ('years', 'Years')], default='months', max_length=6)),
                ('plotCTInitialSortingChoice', models.CharField(choices=[('dlp', 'DLP'), ('ctdi', 'CTDI'), ('freq', 'Frequency'), ('name', 'Name')], default='freq', max_length=4)),
                ('plotRFStudyPerDayAndHour', models.BooleanField(default=False)),
                ('plotRFStudyFreq', models.BooleanField(default=False)),
                ('plotRFStudyDAP', models.BooleanField(default=True)),
                ('plotRFRequestDAP', models.BooleanField(default=True)),
                ('plotRFRequestFreq', models.BooleanField(default=True)),
                ('plotRFInitialSortingChoice', models.CharField(choices=[('dap', 'DAP'), ('freq', 'Frequency'), ('name', 'Name')], default='freq', max_length=4)),
                ('plotMGStudyPerDayAndHour', models.BooleanField(default=False)),
                ('plotMGAGDvsThickness', models.BooleanField(default=False)),
                ('plotMGkVpvsThickness', models.BooleanField(default=False)),
                ('plotMGmAsvsThickness', models.BooleanField(default=False)),
                ('displayCT', models.BooleanField(default=True)),
                ('displayRF', models.BooleanField(default=True)),
                ('displayMG', models.BooleanField(default=True)),
                ('displayDX', models.BooleanField(default=True)),
                ('plotSeriesPerSystem', models.BooleanField(default=False)),
                ('plotHistogramBins', models.PositiveSmallIntegerField(default=20)),
                ('plotHistograms', models.BooleanField(default=False)),
                ('plotCaseInsensitiveCategories', models.BooleanField(default=False)),
                ('summaryWorkloadDaysA', models.IntegerField(blank=True, default=7, null=True, verbose_name='Number of days over which to sum studies A')),
                ('summaryWorkloadDaysB', models.IntegerField(blank=True, default=28, null=True, verbose_name='Number of days over which to sum studies B')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UniqueEquipmentNames',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('manufacturer', models.TextField(blank=True, null=True)),
                ('manufacturer_hash', models.CharField(blank=True, max_length=64, null=True)),
                ('institution_name', models.TextField(blank=True, null=True)),
                ('institution_name_hash', models.CharField(blank=True, max_length=64, null=True)),
                ('station_name', models.CharField(blank=True, max_length=32, null=True)),
                ('station_name_hash', models.CharField(blank=True, max_length=64, null=True)),
                ('institutional_department_name', models.TextField(blank=True, null=True)),
                ('institutional_department_name_hash', models.CharField(blank=True, max_length=64, null=True)),
                ('manufacturer_model_name', models.TextField(blank=True, null=True)),
                ('manufacturer_model_name_hash', models.CharField(blank=True, max_length=64, null=True)),
                ('device_serial_number', models.TextField(blank=True, null=True)),
                ('device_serial_number_hash', models.CharField(blank=True, max_length=64, null=True)),
                ('software_versions', models.TextField(blank=True, null=True)),
                ('software_versions_hash', models.CharField(blank=True, max_length=64, null=True)),
                ('gantry_id', models.TextField(blank=True, null=True)),
                ('gantry_id_hash', models.CharField(blank=True, max_length=64, null=True)),
                ('display_name', models.TextField(blank=True, null=True)),
                ('user_defined_modality', models.CharField(blank=True, max_length=16, null=True)),
                ('hash_generated', models.BooleanField(default=False)),
                ('device_observer_uid', models.TextField(blank=True, null=True)),
                ('device_observer_uid_hash', models.CharField(blank=True, max_length=64, null=True)),
            ],
            options={
                'unique_together': {('manufacturer_hash', 'institution_name_hash', 'station_name_hash', 'institutional_department_name_hash', 'manufacturer_model_name_hash', 'device_serial_number_hash', 'software_versions_hash', 'gantry_id_hash', 'device_observer_uid_hash')},
            },
        ),
        migrations.CreateModel(
            name='SourceOfCTDoseInformation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ct_radiation_dose', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='remapp.CtRadiationDose')),
                ('source_of_dose_information', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='remapp.ContextID')),
            ],
        ),
        migrations.CreateModel(
            name='ScanningLength',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('scanning_length', models.DecimalField(blank=True, decimal_places=8, max_digits=16, null=True)),
                ('length_of_reconstructable_volume', models.DecimalField(blank=True, decimal_places=8, max_digits=16, null=True)),
                ('exposed_range', models.DecimalField(blank=True, decimal_places=8, max_digits=16, null=True)),
                ('top_z_location_of_reconstructable_volume', models.DecimalField(blank=True, decimal_places=8, max_digits=16, null=True)),
                ('bottom_z_location_of_reconstructable_volume', models.DecimalField(blank=True, decimal_places=8, max_digits=16, null=True)),
                ('top_z_location_of_scanning_length', models.DecimalField(blank=True, decimal_places=8, max_digits=16, null=True)),
                ('bottom_z_location_of_scanning_length', models.DecimalField(blank=True, decimal_places=8, max_digits=16, null=True)),
                ('frame_of_reference_uid', models.TextField(blank=True, null=True)),
                ('ct_irradiation_event_data', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='remapp.CtIrradiationEventData')),
            ],
        ),
        migrations.CreateModel(
            name='PulseWidth',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pulse_width', models.DecimalField(blank=True, decimal_places=8, max_digits=16, null=True)),
                ('irradiation_event_xray_source_data', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='remapp.IrradEventXRaySourceData')),
            ],
        ),
        migrations.CreateModel(
            name='ProjectionXRayRadiationDose',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField(blank=True, null=True)),
                ('acquisition_device_type_cid', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tid10001_type', to='remapp.ContextID')),
                ('general_study_module_attributes', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='remapp.GeneralStudyModuleAttr')),
                ('has_intent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tid10001_intent', to='remapp.ContextID')),
                ('procedure_reported', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tid10001_procedure', to='remapp.ContextID')),
                ('scope_of_accumulation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tid10001_scope', to='remapp.ContextID')),
                ('source_of_dose_information', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tid10001_infosource', to='remapp.ContextID')),
                ('xray_detector_data_available', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tid10001_detector', to='remapp.ContextID')),
                ('xray_mechanical_data_available', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tid10001_mech', to='remapp.ContextID')),
                ('xray_source_data_available', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tid10001_source', to='remapp.ContextID')),
            ],
        ),
        migrations.CreateModel(
            name='PKsForSummedRFDoseStudiesInDeltaWeeks',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('study_pk_in_delta_weeks', models.IntegerField(blank=True, null=True)),
                ('general_study_module_attributes', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='remapp.GeneralStudyModuleAttr')),
            ],
        ),
        migrations.CreateModel(
            name='PersonParticipant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('person_name', models.TextField(blank=True, null=True)),
                ('person_role_in_procedure', models.CharField(blank=True, max_length=16)),
                ('person_id', models.TextField(blank=True, null=True)),
                ('person_id_issuer', models.TextField(blank=True, null=True)),
                ('organization_name', models.TextField(blank=True, null=True)),
                ('person_role_in_organization', models.TextField(blank=True, null=True)),
                ('ct_accumulated_dose_data', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='remapp.CtAccumulatedDoseData')),
                ('ct_dose_check_details_alert', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tid1020_alert', to='remapp.CtDoseCheckDetails')),
                ('ct_dose_check_details_notification', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tid1020_notification', to='remapp.CtDoseCheckDetails')),
                ('ct_irradiation_event_data', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='remapp.CtIrradiationEventData')),
                ('ct_radiation_dose', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='remapp.CtRadiationDose')),
                ('irradiation_event_xray_data', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='remapp.IrradEventXRayData')),
                ('person_role_in_organization_cid', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tid1020_roleorg', to='remapp.ContextID')),
                ('person_role_in_procedure_cid', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tid1020_roleproc', to='remapp.ContextID')),
                ('projection_xray_radiation_dose', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='remapp.ProjectionXRayRadiationDose')),
            ],
        ),
        migrations.CreateModel(
            name='PatientStudyModuleAttr',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('admitting_diagnosis_description', models.TextField(blank=True, null=True)),
                ('admitting_diagnosis_code_sequence', models.TextField(blank=True, null=True)),
                ('patient_age', models.CharField(blank=True, max_length=4, null=True)),
                ('patient_age_decimal', models.DecimalField(blank=True, decimal_places=3, max_digits=7, null=True)),
                ('patient_size', models.DecimalField(blank=True, decimal_places=8, max_digits=16, null=True)),
                ('patient_weight', models.DecimalField(blank=True, decimal_places=8, max_digits=16, null=True)),
                ('general_study_module_attributes', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='remapp.GeneralStudyModuleAttr')),
            ],
        ),
        migrations.CreateModel(
            name='PatientModuleAttr',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patient_name', models.TextField(blank=True, null=True)),
                ('name_hashed', models.BooleanField(default=False)),
                ('patient_id', models.TextField(blank=True, null=True)),
                ('id_hashed', models.BooleanField(default=False)),
                ('patient_birth_date', models.DateField(blank=True, null=True)),
                ('patient_sex', models.CharField(blank=True, max_length=2, null=True)),
                ('other_patient_ids', models.TextField(blank=True, null=True)),
                ('not_patient_indicator', models.TextField(blank=True, null=True)),
                ('general_study_module_attributes', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='remapp.GeneralStudyModuleAttr')),
            ],
        ),
        migrations.CreateModel(
            name='ObserverContext',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('person_observer_name', models.TextField(blank=True, null=True)),
                ('person_observer_organization_name', models.TextField(blank=True, null=True)),
                ('device_observer_uid', models.TextField(blank=True, null=True)),
                ('device_observer_name', models.TextField(blank=True, null=True)),
                ('device_observer_manufacturer', models.TextField(blank=True, null=True)),
                ('device_observer_model_name', models.TextField(blank=True, null=True)),
                ('device_observer_serial_number', models.TextField(blank=True, null=True)),
                ('device_observer_physical_location_during_observation', models.TextField(blank=True, null=True)),
                ('ct_radiation_dose', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='remapp.CtRadiationDose')),
                ('device_role_in_procedure', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tid1002_role', to='remapp.ContextID')),
                ('observer_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tid1002_observertype', to='remapp.ContextID')),
                ('person_observer_role_in_organization', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tid1002_ptroleorg', to='remapp.ContextID')),
                ('person_observer_role_in_procedure', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tid1002_ptroleproc', to='remapp.ContextID')),
                ('projection_xray_radiation_dose', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='remapp.ProjectionXRayRadiationDose')),
            ],
        ),
        migrations.CreateModel(
            name='ObjectUIDsProcessed',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sop_instance_uid', models.TextField(blank=True, null=True)),
                ('general_study_module_attributes', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='remapp.GeneralStudyModuleAttr')),
            ],
        ),
        migrations.CreateModel(
            name='Kvp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('kvp', models.DecimalField(blank=True, decimal_places=8, max_digits=16, null=True)),
                ('irradiation_event_xray_source_data', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='remapp.IrradEventXRaySourceData')),
            ],
        ),
        migrations.CreateModel(
            name='IrradEventXRayMechanicalData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('positioner_primary_angle', models.DecimalField(blank=True, decimal_places=8, max_digits=16, null=True)),
                ('positioner_secondary_angle', models.DecimalField(blank=True, decimal_places=8, max_digits=16, null=True)),
                ('positioner_primary_end_angle', models.DecimalField(blank=True, decimal_places=8, max_digits=16, null=True)),
                ('positioner_secondary_end_angle', models.DecimalField(blank=True, decimal_places=8, max_digits=16, null=True)),
                ('column_angulation', models.DecimalField(blank=True, decimal_places=8, max_digits=16, null=True)),
                ('table_head_tilt_angle', models.DecimalField(blank=True, decimal_places=8, max_digits=16, null=True)),
                ('table_horizontal_rotation_angle', models.DecimalField(blank=True, decimal_places=8, max_digits=16, null=True)),
                ('table_cradle_tilt_angle', models.DecimalField(blank=True, decimal_places=8, max_digits=16, null=True)),
                ('compression_thickness', models.DecimalField(blank=True, decimal_places=8, max_digits=16, null=True)),
                ('compression_force', models.DecimalField(blank=True, decimal_places=8, max_digits=16, null=True)),
                ('magnification_factor', models.DecimalField(blank=True, decimal_places=8, max_digits=16, null=True)),
                ('crdr_mechanical_configuration', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='remapp.ContextID')),
                ('irradiation_event_xray_data', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='remapp.IrradEventXRayData')),
            ],
        ),
        migrations.CreateModel(
            name='IrradEventXRayDetectorData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('exposure_index', models.DecimalField(blank=True, decimal_places=8, max_digits=16, null=True)),
                ('target_exposure_index', models.DecimalField(blank=True, decimal_places=8, max_digits=16, null=True)),
                ('deviation_index', models.DecimalField(blank=True, decimal_places=8, max_digits=16, null=True)),
                ('relative_xray_exposure', models.DecimalField(blank=True, decimal_places=8, max_digits=16, null=True)),
                ('relative_exposure_unit', models.CharField(blank=True, max_length=16, null=True)),
                ('sensitivity', models.DecimalField(blank=True, decimal_places=8, max_digits=16, null=True)),
                ('irradiation_event_xray_data', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='remapp.IrradEventXRayData')),
            ],
        ),
        migrations.AddField(
            model_name='irradeventxraydata',
            name='projection_xray_radiation_dose',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='remapp.ProjectionXRayRadiationDose'),
        ),
        migrations.AddField(
            model_name='irradeventxraydata',
            name='reference_point_definition',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tid10003_rpdefinition', to='remapp.ContextID'),
        ),
        migrations.AddField(
            model_name='irradeventxraydata',
            name='target_region',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tid10003_region', to='remapp.ContextID'),
        ),
        migrations.CreateModel(
            name='ImageViewModifier',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image_view_modifier', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='remapp.ContextID')),
                ('irradiation_event_xray_data', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='remapp.IrradEventXRayData')),
            ],
        ),
        migrations.CreateModel(
            name='HighDoseMetricAlertRecipients',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('receive_high_dose_metric_alerts', models.BooleanField(default=False, verbose_name='Receive high dose e-mail alerts?')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='GeneralEquipmentModuleAttr',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('manufacturer', models.TextField(blank=True, null=True)),
                ('institution_name', models.TextField(blank=True, null=True)),
                ('institution_address', models.TextField(blank=True, null=True)),
                ('station_name', models.CharField(blank=True, max_length=32, null=True)),
                ('institutional_department_name', models.TextField(blank=True, null=True)),
                ('manufacturer_model_name', models.TextField(blank=True, null=True)),
                ('device_serial_number', models.TextField(blank=True, null=True)),
                ('software_versions', models.TextField(blank=True, null=True)),
                ('gantry_id', models.TextField(blank=True, null=True)),
                ('spatial_resolution', models.DecimalField(blank=True, decimal_places=4, max_digits=8, null=True)),
                ('date_of_last_calibration', models.DateTimeField(blank=True, null=True)),
                ('time_of_last_calibration', models.DateTimeField(blank=True, null=True)),
                ('general_study_module_attributes', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='remapp.GeneralStudyModuleAttr')),
                ('unique_equipment_name', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='remapp.UniqueEquipmentNames')),
            ],
        ),
        migrations.CreateModel(
            name='Exposure',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('exposure', models.DecimalField(blank=True, decimal_places=2, max_digits=16, null=True)),
                ('irradiation_event_xray_source_data', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='remapp.IrradEventXRaySourceData')),
            ],
        ),
        migrations.CreateModel(
            name='Exports',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('task_id', models.TextField()),
                ('filename', models.FileField(null=True, upload_to='exports/%Y/%m/%d')),
                ('status', models.TextField(blank=True, null=True)),
                ('progress', models.TextField(blank=True, null=True)),
                ('modality', models.CharField(blank=True, max_length=16, null=True)),
                ('num_records', models.IntegerField(blank=True, null=True)),
                ('export_type', models.TextField(blank=True, null=True)),
                ('export_date', models.DateTimeField(blank=True, null=True)),
                ('processtime', models.DecimalField(blank=True, decimal_places=10, max_digits=30, null=True)),
                ('includes_pid', models.BooleanField(default=False)),
                ('export_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='DoseRelatedDistanceMeasurements',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('distance_source_to_isocenter', models.DecimalField(blank=True, decimal_places=8, max_digits=16, null=True)),
                ('distance_source_to_reference_point', models.DecimalField(blank=True, decimal_places=8, max_digits=16, null=True)),
                ('distance_source_to_detector', models.DecimalField(blank=True, decimal_places=8, max_digits=16, null=True)),
                ('table_longitudinal_position', models.DecimalField(blank=True, decimal_places=8, max_digits=16, null=True)),
                ('table_lateral_position', models.DecimalField(blank=True, decimal_places=8, max_digits=16, null=True)),
                ('table_height_position', models.DecimalField(blank=True, decimal_places=8, max_digits=16, null=True)),
                ('distance_source_to_table_plane', models.DecimalField(blank=True, decimal_places=8, max_digits=16, null=True)),
                ('table_longitudinal_end_position', models.DecimalField(blank=True, decimal_places=8, max_digits=16, null=True)),
                ('table_lateral_end_position', models.DecimalField(blank=True, decimal_places=8, max_digits=16, null=True)),
                ('table_height_end_position', models.DecimalField(blank=True, decimal_places=8, max_digits=16, null=True)),
                ('distance_source_to_entrance_surface', models.DecimalField(blank=True, decimal_places=8, max_digits=16, null=True)),
                ('radiological_thickness', models.DecimalField(blank=True, decimal_places=8, max_digits=16, null=True)),
                ('irradiation_event_xray_mechanical_data', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='remapp.IrradEventXRayMechanicalData')),
            ],
        ),
        migrations.CreateModel(
            name='DicomQuery',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('complete', models.BooleanField(default=False)),
                ('query_id', models.CharField(max_length=64)),
                ('failed', models.BooleanField(default=False)),
                ('message', models.TextField(blank=True, null=True)),
                ('stage', models.TextField(blank=True, null=True)),
                ('move_complete', models.BooleanField(default=False)),
                ('qr_scp_fk', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='remapp.DicomRemoteQR')),
                ('store_scp_fk', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='remapp.DicomStoreSCP')),
            ],
        ),
        migrations.CreateModel(
            name='DicomQRRspStudy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('query_id', models.CharField(max_length=64)),
                ('study_instance_uid', models.TextField(blank=True, null=True)),
                ('modality', models.CharField(blank=True, max_length=16, null=True)),
                ('modalities_in_study', models.CharField(blank=True, max_length=100, null=True)),
                ('study_description', models.TextField(blank=True, null=True)),
                ('number_of_study_related_series', models.IntegerField(blank=True, null=True)),
                ('sop_classes_in_study', models.TextField(blank=True, null=True)),
                ('station_name', models.CharField(blank=True, max_length=16, null=True)),
                ('dicom_query', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='remapp.DicomQuery')),
            ],
        ),
        migrations.CreateModel(
            name='DicomQRRspSeries',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('query_id', models.CharField(max_length=64)),
                ('series_instance_uid', models.TextField(blank=True, null=True)),
                ('series_number', models.IntegerField(blank=True, null=True)),
                ('series_time', models.TimeField(blank=True, null=True)),
                ('modality', models.CharField(blank=True, max_length=16, null=True)),
                ('series_description', models.TextField(blank=True, null=True)),
                ('number_of_series_related_instances', models.IntegerField(blank=True, null=True)),
                ('station_name', models.CharField(blank=True, max_length=16, null=True)),
                ('sop_class_in_series', models.TextField(blank=True, null=True)),
                ('image_level_move', models.BooleanField(default=False)),
                ('dicom_qr_rsp_study', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='remapp.DicomQRRspStudy')),
            ],
        ),
        migrations.CreateModel(
            name='DicomQRRspImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('query_id', models.CharField(max_length=64)),
                ('sop_instance_uid', models.TextField(blank=True, null=True)),
                ('instance_number', models.IntegerField(blank=True, null=True)),
                ('sop_class_uid', models.TextField(blank=True, null=True)),
                ('dicom_qr_rsp_series', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='remapp.DicomQRRspSeries')),
            ],
        ),
        migrations.CreateModel(
            name='DeviceParticipant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('device_name', models.TextField(blank=True, null=True)),
                ('device_manufacturer', models.TextField(blank=True, null=True)),
                ('device_model_name', models.TextField(blank=True, null=True)),
                ('device_serial_number', models.TextField(blank=True, null=True)),
                ('device_observer_uid', models.TextField(blank=True, null=True)),
                ('accumulated_xray_dose', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='remapp.AccumXRayDose')),
                ('ct_accumulated_dose_data', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='remapp.CtAccumulatedDoseData')),
                ('ct_irradiation_event_data', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='remapp.CtIrradiationEventData')),
                ('device_role_in_procedure', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='remapp.ContextID')),
                ('irradiation_event_xray_detector_data', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='remapp.IrradEventXRayDetectorData')),
                ('irradiation_event_xray_source_data', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='remapp.IrradEventXRaySourceData')),
            ],
        ),
        migrations.CreateModel(
            name='CtXRaySourceParameters',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('identification_of_the_xray_source', models.TextField(blank=True, null=True)),
                ('kvp', models.DecimalField(blank=True, decimal_places=8, max_digits=16, null=True)),
                ('maximum_xray_tube_current', models.DecimalField(blank=True, decimal_places=8, max_digits=16, null=True)),
                ('xray_tube_current', models.DecimalField(blank=True, decimal_places=8, max_digits=16, null=True)),
                ('exposure_time_per_rotation', models.DecimalField(blank=True, decimal_places=8, max_digits=16, null=True)),
                ('xray_filter_aluminum_equivalent', models.DecimalField(blank=True, decimal_places=8, max_digits=16, null=True)),
                ('ct_irradiation_event_data', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='remapp.CtIrradiationEventData')),
            ],
        ),
        migrations.CreateModel(
            name='CtReconstructionAlgorithm',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ct_irradiation_event_data', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='remapp.CtIrradiationEventData')),
                ('reconstruction_algorithm', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='remapp.ContextID')),
            ],
        ),
        migrations.AddField(
            model_name='ctradiationdose',
            name='general_study_module_attributes',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='remapp.GeneralStudyModuleAttr'),
        ),
        migrations.AddField(
            model_name='ctradiationdose',
            name='has_intent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tid10011_intent', to='remapp.ContextID'),
        ),
        migrations.AddField(
            model_name='ctradiationdose',
            name='procedure_reported',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tid10011_procedure', to='remapp.ContextID'),
        ),
        migrations.AddField(
            model_name='ctradiationdose',
            name='scope_of_accumulation',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tid10011_scope', to='remapp.ContextID'),
        ),
        migrations.AddField(
            model_name='ctradiationdose',
            name='source_of_dose_information',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tid10011_source', to='remapp.ContextID'),
        ),
        migrations.AddField(
            model_name='ctradiationdose',
            name='uid_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tid1011_uid', to='remapp.ContextID'),
        ),
        migrations.AddField(
            model_name='ctirradiationeventdata',
            name='ct_radiation_dose',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='remapp.CtRadiationDose'),
        ),
        migrations.AddField(
            model_name='ctirradiationeventdata',
            name='ctdiw_phantom_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tid10013_phantom', to='remapp.ContextID'),
        ),
        migrations.AddField(
            model_name='ctirradiationeventdata',
            name='label_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tid10013_labeltype', to='remapp.ContextID'),
        ),
        migrations.AddField(
            model_name='ctirradiationeventdata',
            name='measurement_method',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tid10013_method', to='remapp.ContextID'),
        ),
        migrations.AddField(
            model_name='ctirradiationeventdata',
            name='procedure_context',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tid10013_context', to='remapp.ContextID'),
        ),
        migrations.AddField(
            model_name='ctirradiationeventdata',
            name='target_region',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tid10013_region', to='remapp.ContextID'),
        ),
        migrations.AddField(
            model_name='ctdosecheckdetails',
            name='ct_irradiation_event_data',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='remapp.CtIrradiationEventData'),
        ),
        migrations.AddField(
            model_name='ctaccumulateddosedata',
            name='ct_radiation_dose',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='remapp.CtRadiationDose'),
        ),
        migrations.AddField(
            model_name='ctaccumulateddosedata',
            name='measurement_method',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tid10012_method', to='remapp.ContextID'),
        ),
        migrations.AddField(
            model_name='ctaccumulateddosedata',
            name='reference_authority_code',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tid10012_authority', to='remapp.ContextID'),
        ),
        migrations.CreateModel(
            name='Calibration',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('calibration_date', models.DateTimeField(blank=True, null=True)),
                ('calibration_factor', models.DecimalField(blank=True, decimal_places=8, max_digits=16, null=True)),
                ('calibration_uncertainty', models.DecimalField(blank=True, decimal_places=8, max_digits=16, null=True)),
                ('calibration_responsible_party', models.TextField(blank=True, null=True)),
                ('accumulated_xray_dose', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='remapp.AccumXRayDose')),
                ('dose_measurement_device', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='remapp.ContextID')),
            ],
        ),
        migrations.AddField(
            model_name='accumxraydose',
            name='acquisition_plane',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='remapp.ContextID'),
        ),
        migrations.AddField(
            model_name='accumxraydose',
            name='projection_xray_radiation_dose',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='remapp.ProjectionXRayRadiationDose'),
        ),
        migrations.CreateModel(
            name='AccumProjXRayDose',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fluoro_dose_area_product_total', models.DecimalField(blank=True, decimal_places=12, max_digits=16, null=True)),
                ('fluoro_dose_rp_total', models.DecimalField(blank=True, decimal_places=12, max_digits=16, null=True)),
                ('total_fluoro_time', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True)),
                ('acquisition_dose_area_product_total', models.DecimalField(blank=True, decimal_places=12, max_digits=16, null=True)),
                ('acquisition_dose_rp_total', models.DecimalField(blank=True, decimal_places=12, max_digits=16, null=True)),
                ('total_acquisition_time', models.DecimalField(blank=True, decimal_places=8, max_digits=16, null=True)),
                ('dose_area_product_total', models.DecimalField(blank=True, decimal_places=12, max_digits=16, null=True)),
                ('dose_rp_total', models.DecimalField(blank=True, decimal_places=12, max_digits=16, null=True)),
                ('total_number_of_radiographic_frames', models.DecimalField(blank=True, decimal_places=0, max_digits=6, null=True)),
                ('reference_point_definition', models.TextField(blank=True, null=True)),
                ('accumulated_xray_dose', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='remapp.AccumXRayDose')),
                ('reference_point_definition_code', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='remapp.ContextID')),
            ],
        ),
        migrations.CreateModel(
            name='AccumMammographyXRayDose',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('accumulated_average_glandular_dose', models.DecimalField(blank=True, decimal_places=4, max_digits=8, null=True)),
                ('accumulated_xray_dose', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='remapp.AccumXRayDose')),
                ('laterality', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='remapp.ContextID')),
            ],
        ),
        migrations.CreateModel(
            name='AccumIntegratedProjRadiogDose',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dose_area_product_total', models.DecimalField(blank=True, decimal_places=12, max_digits=16, null=True)),
                ('dose_rp_total', models.DecimalField(blank=True, decimal_places=12, max_digits=16, null=True)),
                ('total_number_of_radiographic_frames', models.DecimalField(blank=True, decimal_places=0, max_digits=6, null=True)),
                ('reference_point_definition', models.TextField(blank=True, null=True)),
                ('dose_area_product_total_over_delta_weeks', models.DecimalField(blank=True, decimal_places=12, max_digits=16, null=True)),
                ('dose_rp_total_over_delta_weeks', models.DecimalField(blank=True, decimal_places=12, max_digits=16, null=True)),
                ('accumulated_xray_dose', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='remapp.AccumXRayDose')),
                ('reference_point_definition_code', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='remapp.ContextID')),
            ],
        ),
        migrations.CreateModel(
            name='AccumCassetteBsdProjRadiogDose',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_number_of_radiographic_frames', models.DecimalField(blank=True, decimal_places=0, max_digits=6, null=True)),
                ('accumulated_xray_dose', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='remapp.AccumXRayDose')),
                ('detector_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='remapp.ContextID')),
            ],
        ),
    ]
